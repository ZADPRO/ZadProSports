{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T06:18:17.647Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T06:21:18.526Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T06:21:35.208Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/userRoutes/forgotPassword","timestamp":"2025-05-20T06:21:38.252Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/userRoutes/forgotPassword","timestamp":"2025-05-20T06:23:23.186Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T06:25:18.385Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T06:25:23.639Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T06:26:13.203Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T06:26:27.144Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T06:26:40.676Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T06:27:19.915Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T06:27:42.473Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T06:27:50.431Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/userRoutes/resetPassword","timestamp":"2025-05-20T06:28:16.453Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T06:36:35.204Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T06:37:12.224Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T06:38:49.184Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T06:38:59.288Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T06:39:11.931Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T06:39:16.813Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T06:40:47.509Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T06:40:53.336Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T06:41:09.059Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T06:42:24.029Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T06:42:32.927Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T06:44:32.247Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T06:45:05.812Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T06:47:42.417Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T06:47:46.969Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T06:47:51.470Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T06:48:13.032Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T06:48:59.368Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T06:51:22.582Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T06:51:36.030Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T06:51:46.189Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T06:51:51.276Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T06:52:05.869Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T06:52:20.367Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T06:52:52.482Z"}
{"level":"error","message":"Server not running ---  New route /api/v1/userRoutes/userGroundBooking conflicts with existing /api/v1/userRoutes/userGroundBooking","name":"AssertError","stack":"AssertError: New route /api/v1/userRoutes/userGroundBooking conflicts with existing /api/v1/userRoutes/userGroundBooking\n    at module.exports.internals.Segment.internals.Segment.add (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\node_modules\\@hapi\\call\\lib\\segment.js:47:14)\n    at exports.Router.internals.Router.internals.Router.add (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\node_modules\\@hapi\\call\\lib\\index.js:65:16)\n    at internals.Server._addRoute (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\node_modules\\@hapi\\hapi\\lib\\server.js:529:46)\n    at internals.Server.route (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\user\\routes.ts:13:14\n    at new Promise (<anonymous>)\n    at userRoutes.<anonymous> (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\user\\routes.ts:11:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\user\\routes.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-05-20T06:52:59.771Z"}
{"level":"error","message":"Server not running ---  New route /api/v1/userRoutes/userGroundBooking conflicts with existing /api/v1/userRoutes/userGroundBooking","name":"AssertError","stack":"AssertError: New route /api/v1/userRoutes/userGroundBooking conflicts with existing /api/v1/userRoutes/userGroundBooking\n    at module.exports.internals.Segment.internals.Segment.add (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\node_modules\\@hapi\\call\\lib\\segment.js:47:14)\n    at exports.Router.internals.Router.internals.Router.add (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\node_modules\\@hapi\\call\\lib\\index.js:65:16)\n    at internals.Server._addRoute (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\node_modules\\@hapi\\hapi\\lib\\server.js:529:46)\n    at internals.Server.route (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\user\\routes.ts:13:14\n    at new Promise (<anonymous>)\n    at userRoutes.<anonymous> (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\user\\routes.ts:11:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\user\\routes.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-05-20T06:53:15.271Z"}
{"level":"error","message":"Server not running ---  New route /api/v1/userRoutes/userGroundBooking conflicts with existing /api/v1/userRoutes/userGroundBooking","name":"AssertError","stack":"AssertError: New route /api/v1/userRoutes/userGroundBooking conflicts with existing /api/v1/userRoutes/userGroundBooking\n    at module.exports.internals.Segment.internals.Segment.add (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\node_modules\\@hapi\\call\\lib\\segment.js:47:14)\n    at exports.Router.internals.Router.internals.Router.add (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\node_modules\\@hapi\\call\\lib\\index.js:65:16)\n    at internals.Server._addRoute (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\node_modules\\@hapi\\hapi\\lib\\server.js:529:46)\n    at internals.Server.route (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\user\\routes.ts:13:14\n    at new Promise (<anonymous>)\n    at userRoutes.<anonymous> (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\user\\routes.ts:11:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\user\\routes.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-05-20T06:53:24.516Z"}
{"level":"error","message":"Server not running ---  New route /api/v1/userRoutes/userGroundBooking conflicts with existing /api/v1/userRoutes/userGroundBooking","name":"AssertError","stack":"AssertError: New route /api/v1/userRoutes/userGroundBooking conflicts with existing /api/v1/userRoutes/userGroundBooking\n    at module.exports.internals.Segment.internals.Segment.add (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\node_modules\\@hapi\\call\\lib\\segment.js:47:14)\n    at exports.Router.internals.Router.internals.Router.add (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\node_modules\\@hapi\\call\\lib\\index.js:65:16)\n    at internals.Server._addRoute (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\node_modules\\@hapi\\hapi\\lib\\server.js:529:46)\n    at internals.Server.route (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\user\\routes.ts:13:14\n    at new Promise (<anonymous>)\n    at userRoutes.<anonymous> (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\user\\routes.ts:11:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\user\\routes.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-05-20T06:53:36.043Z"}
{"level":"error","message":"Server not running ---  New route /api/v1/userRoutes/userGroundBooking conflicts with existing /api/v1/userRoutes/userGroundBooking","name":"AssertError","stack":"AssertError: New route /api/v1/userRoutes/userGroundBooking conflicts with existing /api/v1/userRoutes/userGroundBooking\n    at module.exports.internals.Segment.internals.Segment.add (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\node_modules\\@hapi\\call\\lib\\segment.js:47:14)\n    at exports.Router.internals.Router.internals.Router.add (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\node_modules\\@hapi\\call\\lib\\index.js:65:16)\n    at internals.Server._addRoute (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\node_modules\\@hapi\\hapi\\lib\\server.js:529:46)\n    at internals.Server.route (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\user\\routes.ts:13:14\n    at new Promise (<anonymous>)\n    at userRoutes.<anonymous> (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\user\\routes.ts:11:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\user\\routes.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-05-20T06:53:48.300Z"}
{"level":"error","message":"Server not running ---  New route /api/v1/groundRoutes/addGround conflicts with existing /api/v1/groundRoutes/addGround","name":"AssertError","stack":"AssertError: New route /api/v1/groundRoutes/addGround conflicts with existing /api/v1/groundRoutes/addGround\n    at module.exports.internals.Segment.internals.Segment.add (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\node_modules\\@hapi\\call\\lib\\segment.js:47:14)\n    at exports.Router.internals.Router.internals.Router.add (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\node_modules\\@hapi\\call\\lib\\index.js:65:16)\n    at internals.Server._addRoute (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\node_modules\\@hapi\\hapi\\lib\\server.js:529:46)\n    at internals.Server.route (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\feedBack\\routes.ts:12:14\n    at new Promise (<anonymous>)\n    at feedbackRoutes.<anonymous> (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\feedBack\\routes.ts:10:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\feedBack\\routes.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-05-20T06:54:04.773Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T06:54:14.745Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T06:54:53.208Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T06:54:59.240Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T06:55:09.826Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T06:58:04.386Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T06:59:30.422Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T07:00:21.913Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T07:00:30.881Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T07:01:24.973Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T07:01:50.500Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T07:11:17.359Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T07:11:26.173Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T07:11:45.024Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T07:11:52.187Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T07:12:04.196Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T07:12:55.640Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T07:14:36.198Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T07:16:23.148Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T07:16:31.176Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T07:16:52.557Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T07:17:54.689Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T07:18:01.956Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T07:18:15.625Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/feedbackRoutes/addFeedBack","timestamp":"2025-05-20T07:21:56.523Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T07:22:54.901Z"}
{"level":"error","message":"Server not running ---  New route /api/v1/feedbackRoutes/addFeedBack conflicts with existing /api/v1/feedbackRoutes/addFeedBack","name":"AssertError","stack":"AssertError: New route /api/v1/feedbackRoutes/addFeedBack conflicts with existing /api/v1/feedbackRoutes/addFeedBack\n    at module.exports.internals.Segment.internals.Segment.add (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\node_modules\\@hapi\\call\\lib\\segment.js:47:14)\n    at exports.Router.internals.Router.internals.Router.add (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\node_modules\\@hapi\\call\\lib\\index.js:65:16)\n    at internals.Server._addRoute (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\node_modules\\@hapi\\hapi\\lib\\server.js:529:46)\n    at internals.Server.route (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\feedBack\\routes.ts:13:14\n    at new Promise (<anonymous>)\n    at feedbackRoutes.<anonymous> (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\feedBack\\routes.ts:11:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\feedBack\\routes.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-05-20T07:23:13.066Z"}
{"level":"error","message":"Server not running ---  New route /api/v1/feedbackRoutes/addFeedBack conflicts with existing /api/v1/feedbackRoutes/addFeedBack","name":"AssertError","stack":"AssertError: New route /api/v1/feedbackRoutes/addFeedBack conflicts with existing /api/v1/feedbackRoutes/addFeedBack\n    at module.exports.internals.Segment.internals.Segment.add (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\node_modules\\@hapi\\call\\lib\\segment.js:47:14)\n    at exports.Router.internals.Router.internals.Router.add (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\node_modules\\@hapi\\call\\lib\\index.js:65:16)\n    at internals.Server._addRoute (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\node_modules\\@hapi\\hapi\\lib\\server.js:529:46)\n    at internals.Server.route (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\feedBack\\routes.ts:13:14\n    at new Promise (<anonymous>)\n    at feedbackRoutes.<anonymous> (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\feedBack\\routes.ts:11:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\feedBack\\routes.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-05-20T07:23:59.285Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T07:25:22.293Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/feedbackRoutes/addFeedBack","timestamp":"2025-05-20T07:25:25.839Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T07:27:17.605Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T07:27:30.025Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T07:27:41.786Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T07:28:26.432Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T07:29:01.877Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T07:31:46.357Z"}
{"level":"error","message":"Server not running ---  New route /api/v1/feedbackRoutes/listFeedBack conflicts with existing /api/v1/feedbackRoutes/listFeedBack","name":"AssertError","stack":"AssertError: New route /api/v1/feedbackRoutes/listFeedBack conflicts with existing /api/v1/feedbackRoutes/listFeedBack\n    at module.exports.internals.Segment.internals.Segment.add (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\node_modules\\@hapi\\call\\lib\\segment.js:47:14)\n    at exports.Router.internals.Router.internals.Router.add (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\node_modules\\@hapi\\call\\lib\\index.js:65:16)\n    at internals.Server._addRoute (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\node_modules\\@hapi\\hapi\\lib\\server.js:529:46)\n    at internals.Server.route (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\feedBack\\routes.ts:13:14\n    at new Promise (<anonymous>)\n    at feedbackRoutes.<anonymous> (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\feedBack\\routes.ts:11:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\feedBack\\routes.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-05-20T07:32:43.204Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T07:36:01.890Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T07:36:16.175Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T07:36:34.574Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T07:43:32.581Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T07:49:16.593Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T07:56:53.491Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T07:58:40.057Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T07:58:48.887Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T07:59:32.170Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T08:00:00.391Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T08:04:39.584Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T08:05:49.763Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T08:06:13.141Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T08:06:43.688Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T08:07:16.923Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T08:07:27.241Z"}
{"actual":false,"code":"ERR_ASSERTION","expected":true,"generatedMessage":false,"level":"error","message":"Server not running ---  Cannot validate HEAD or GET request payload: GET /api/v1/feedbackRoutes/groundFeedBack","operator":"==","stack":"AssertionError [ERR_ASSERTION]: Cannot validate HEAD or GET request payload: GET /api/v1/feedbackRoutes/groundFeedBack\n    at new module.exports.internals.Route (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\node_modules\\@hapi\\hapi\\lib\\route.js:61:14)\n    at internals.Server._addRoute (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\node_modules\\@hapi\\hapi\\lib\\server.js:525:23)\n    at internals.Server.route (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\feedBack\\routes.ts:13:14\n    at new Promise (<anonymous>)\n    at feedbackRoutes.<anonymous> (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\feedBack\\routes.ts:11:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\feedBack\\routes.ts:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\feedBack\\routes.ts:4:12)","timestamp":"2025-05-20T08:08:04.759Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T08:08:12.981Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/feedbackRoutes/groundFeedBack","timestamp":"2025-05-20T08:08:27.223Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/feedbackRoutes/groundFeedBack","timestamp":"2025-05-20T08:09:11.137Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T08:09:45.542Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T08:10:09.671Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/feedbackRoutes/groundFeedBack","timestamp":"2025-05-20T08:10:13.434Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T08:12:51.475Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T08:15:13.945Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T08:15:21.256Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T08:17:41.744Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T08:17:53.871Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T08:19:07.067Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T08:20:55.316Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T08:22:55.060Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T08:23:02.446Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T08:24:09.220Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T08:26:39.084Z"}
{"actual":false,"code":"ERR_ASSERTION","expected":true,"generatedMessage":false,"level":"error","message":"Server not running ---  Cannot validate HEAD or GET request payload: GET /api/v1/userRoutes/userBookingHistory","operator":"==","stack":"AssertionError [ERR_ASSERTION]: Cannot validate HEAD or GET request payload: GET /api/v1/userRoutes/userBookingHistory\n    at new module.exports.internals.Route (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\node_modules\\@hapi\\hapi\\lib\\route.js:61:14)\n    at internals.Server._addRoute (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\node_modules\\@hapi\\hapi\\lib\\server.js:525:23)\n    at internals.Server.route (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\user\\routes.ts:13:14\n    at new Promise (<anonymous>)\n    at userRoutes.<anonymous> (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\user\\routes.ts:11:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\user\\routes.ts:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\user\\routes.ts:4:12)","timestamp":"2025-05-20T08:27:33.705Z"}
{"actual":false,"code":"ERR_ASSERTION","expected":true,"generatedMessage":false,"level":"error","message":"Server not running ---  Cannot validate HEAD or GET request payload: GET /api/v1/userRoutes/userBookingHistory","operator":"==","stack":"AssertionError [ERR_ASSERTION]: Cannot validate HEAD or GET request payload: GET /api/v1/userRoutes/userBookingHistory\n    at new module.exports.internals.Route (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\node_modules\\@hapi\\hapi\\lib\\route.js:61:14)\n    at internals.Server._addRoute (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\node_modules\\@hapi\\hapi\\lib\\server.js:525:23)\n    at internals.Server.route (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\user\\routes.ts:13:14\n    at new Promise (<anonymous>)\n    at userRoutes.<anonymous> (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\user\\routes.ts:11:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\user\\routes.ts:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\user\\routes.ts:4:12)","timestamp":"2025-05-20T08:28:15.398Z"}
{"actual":false,"code":"ERR_ASSERTION","expected":true,"generatedMessage":false,"level":"error","message":"Server not running ---  Cannot validate HEAD or GET request payload: GET /api/v1/userRoutes/userBookingHistory","operator":"==","stack":"AssertionError [ERR_ASSERTION]: Cannot validate HEAD or GET request payload: GET /api/v1/userRoutes/userBookingHistory\n    at new module.exports.internals.Route (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\node_modules\\@hapi\\hapi\\lib\\route.js:61:14)\n    at internals.Server._addRoute (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\node_modules\\@hapi\\hapi\\lib\\server.js:525:23)\n    at internals.Server.route (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\user\\routes.ts:13:14\n    at new Promise (<anonymous>)\n    at userRoutes.<anonymous> (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\user\\routes.ts:11:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\user\\routes.ts:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\user\\routes.ts:4:12)","timestamp":"2025-05-20T08:28:29.260Z"}
{"actual":false,"code":"ERR_ASSERTION","expected":true,"generatedMessage":false,"level":"error","message":"Server not running ---  Cannot validate HEAD or GET request payload: GET /api/v1/userRoutes/userBookingHistory","operator":"==","stack":"AssertionError [ERR_ASSERTION]: Cannot validate HEAD or GET request payload: GET /api/v1/userRoutes/userBookingHistory\n    at new module.exports.internals.Route (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\node_modules\\@hapi\\hapi\\lib\\route.js:61:14)\n    at internals.Server._addRoute (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\node_modules\\@hapi\\hapi\\lib\\server.js:525:23)\n    at internals.Server.route (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\user\\routes.ts:13:14\n    at new Promise (<anonymous>)\n    at userRoutes.<anonymous> (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\user\\routes.ts:11:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\user\\routes.ts:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\user\\routes.ts:4:12)","timestamp":"2025-05-20T08:29:19.440Z"}
{"actual":false,"code":"ERR_ASSERTION","expected":true,"generatedMessage":false,"level":"error","message":"Server not running ---  Cannot validate HEAD or GET request payload: GET /api/v1/userRoutes/userBookingHistory","operator":"==","stack":"AssertionError [ERR_ASSERTION]: Cannot validate HEAD or GET request payload: GET /api/v1/userRoutes/userBookingHistory\n    at new module.exports.internals.Route (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\node_modules\\@hapi\\hapi\\lib\\route.js:61:14)\n    at internals.Server._addRoute (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\node_modules\\@hapi\\hapi\\lib\\server.js:525:23)\n    at internals.Server.route (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\user\\routes.ts:13:14\n    at new Promise (<anonymous>)\n    at userRoutes.<anonymous> (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\user\\routes.ts:11:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\user\\routes.ts:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\user\\routes.ts:4:12)","timestamp":"2025-05-20T08:46:37.946Z"}
{"actual":false,"code":"ERR_ASSERTION","expected":true,"generatedMessage":false,"level":"error","message":"Server not running ---  Cannot validate HEAD or GET request payload: GET /api/v1/userRoutes/userBookingHistory","operator":"==","stack":"AssertionError [ERR_ASSERTION]: Cannot validate HEAD or GET request payload: GET /api/v1/userRoutes/userBookingHistory\n    at new module.exports.internals.Route (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\node_modules\\@hapi\\hapi\\lib\\route.js:61:14)\n    at internals.Server._addRoute (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\node_modules\\@hapi\\hapi\\lib\\server.js:525:23)\n    at internals.Server.route (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\user\\routes.ts:13:14\n    at new Promise (<anonymous>)\n    at userRoutes.<anonymous> (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\user\\routes.ts:11:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\user\\routes.ts:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\user\\routes.ts:4:12)","timestamp":"2025-05-20T09:38:15.142Z"}
{"actual":false,"code":"ERR_ASSERTION","expected":true,"generatedMessage":false,"level":"error","message":"Server not running ---  Cannot validate HEAD or GET request payload: GET /api/v1/userRoutes/userBookingHistory","operator":"==","stack":"AssertionError [ERR_ASSERTION]: Cannot validate HEAD or GET request payload: GET /api/v1/userRoutes/userBookingHistory\n    at new module.exports.internals.Route (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\node_modules\\@hapi\\hapi\\lib\\route.js:61:14)\n    at internals.Server._addRoute (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\node_modules\\@hapi\\hapi\\lib\\server.js:525:23)\n    at internals.Server.route (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\user\\routes.ts:13:14\n    at new Promise (<anonymous>)\n    at userRoutes.<anonymous> (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\user\\routes.ts:11:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\user\\routes.ts:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\user\\routes.ts:4:12)","timestamp":"2025-05-20T09:38:29.494Z"}
{"actual":false,"code":"ERR_ASSERTION","expected":true,"generatedMessage":false,"level":"error","message":"Server not running ---  Cannot validate HEAD or GET request payload: GET /api/v1/userRoutes/userBookingHistory","operator":"==","stack":"AssertionError [ERR_ASSERTION]: Cannot validate HEAD or GET request payload: GET /api/v1/userRoutes/userBookingHistory\n    at new module.exports.internals.Route (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\node_modules\\@hapi\\hapi\\lib\\route.js:61:14)\n    at internals.Server._addRoute (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\node_modules\\@hapi\\hapi\\lib\\server.js:525:23)\n    at internals.Server.route (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\user\\routes.ts:13:14\n    at new Promise (<anonymous>)\n    at userRoutes.<anonymous> (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\user\\routes.ts:11:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\user\\routes.ts:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\user\\routes.ts:4:12)","timestamp":"2025-05-20T09:47:34.657Z"}
{"actual":false,"code":"ERR_ASSERTION","expected":true,"generatedMessage":false,"level":"error","message":"Server not running ---  Cannot validate HEAD or GET request payload: GET /api/v1/userRoutes/userBookingHistory","operator":"==","stack":"AssertionError [ERR_ASSERTION]: Cannot validate HEAD or GET request payload: GET /api/v1/userRoutes/userBookingHistory\n    at new module.exports.internals.Route (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\node_modules\\@hapi\\hapi\\lib\\route.js:61:14)\n    at internals.Server._addRoute (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\node_modules\\@hapi\\hapi\\lib\\server.js:525:23)\n    at internals.Server.route (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\user\\routes.ts:13:14\n    at new Promise (<anonymous>)\n    at userRoutes.<anonymous> (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\user\\routes.ts:11:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\user\\routes.ts:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\user\\routes.ts:4:12)","timestamp":"2025-05-20T09:48:53.656Z"}
{"actual":false,"code":"ERR_ASSERTION","expected":true,"generatedMessage":false,"level":"error","message":"Server not running ---  Cannot validate HEAD or GET request payload: GET /api/v1/userRoutes/userBookingHistory","operator":"==","stack":"AssertionError [ERR_ASSERTION]: Cannot validate HEAD or GET request payload: GET /api/v1/userRoutes/userBookingHistory\n    at new module.exports.internals.Route (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\node_modules\\@hapi\\hapi\\lib\\route.js:61:14)\n    at internals.Server._addRoute (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\node_modules\\@hapi\\hapi\\lib\\server.js:525:23)\n    at internals.Server.route (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\user\\routes.ts:13:14\n    at new Promise (<anonymous>)\n    at userRoutes.<anonymous> (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\user\\routes.ts:11:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\user\\routes.ts:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\user\\routes.ts:4:12)","timestamp":"2025-05-20T09:50:40.565Z"}
{"actual":false,"code":"ERR_ASSERTION","expected":true,"generatedMessage":false,"level":"error","message":"Server not running ---  Cannot validate HEAD or GET request payload: GET /api/v1/userRoutes/userBookingHistory","operator":"==","stack":"AssertionError [ERR_ASSERTION]: Cannot validate HEAD or GET request payload: GET /api/v1/userRoutes/userBookingHistory\n    at new module.exports.internals.Route (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\node_modules\\@hapi\\hapi\\lib\\route.js:61:14)\n    at internals.Server._addRoute (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\node_modules\\@hapi\\hapi\\lib\\server.js:525:23)\n    at internals.Server.route (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\user\\routes.ts:13:14\n    at new Promise (<anonymous>)\n    at userRoutes.<anonymous> (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\user\\routes.ts:11:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\user\\routes.ts:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (C:\\Users\\INDHU\\Desktop\\projects\\sports app\\src\\api\\user\\routes.ts:4:12)","timestamp":"2025-05-20T09:50:49.520Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T09:51:30.668Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T12:00:41.256Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T12:00:48.397Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T12:01:10.665Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T12:01:46.884Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T12:02:50.806Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/feedbackRoutes/groundFeedBack","timestamp":"2025-05-20T12:14:27.256Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/adminRoutes/userLogin","timestamp":"2025-05-20T12:14:35.607Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T12:15:58.383Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T12:15:58.394Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T12:17:23.041Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T12:17:23.393Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T12:17:23.448Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T12:19:36.669Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T12:19:36.810Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T12:20:02.051Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T12:20:02.183Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T12:20:05.919Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T12:20:05.943Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T12:20:08.029Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T12:20:08.053Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T12:20:10.972Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T12:20:10.992Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T12:20:11.825Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T12:20:11.840Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T12:20:20.434Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T12:20:20.470Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T12:20:27.264Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T12:20:27.281Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T12:21:10.132Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T12:21:10.271Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T12:21:52.703Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T12:21:52.828Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T12:21:56.751Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T12:21:56.772Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T12:22:12.603Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T12:22:12.632Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T12:22:12.776Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T12:24:02.181Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T12:24:10.374Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T12:24:10.551Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T12:26:35.885Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T12:26:36.039Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T12:27:12.538Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T12:27:12.633Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T12:28:02.598Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T12:28:02.757Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T12:28:07.184Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T12:28:07.200Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T12:28:26.011Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T12:28:34.456Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T12:28:34.893Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T12:33:22.913Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T12:33:23.037Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T12:55:47.820Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T12:55:47.952Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T12:55:56.322Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T12:55:56.355Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T12:56:44.920Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T12:56:45.074Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T12:59:36.652Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T12:59:36.830Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T13:00:27.161Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T13:00:27.314Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T13:01:05.859Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T13:01:32.982Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T13:01:33.109Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T13:01:53.496Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T13:01:53.739Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T14:43:42.529Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T14:49:06.674Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T14:49:06.818Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T14:50:37.532Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T14:50:37.623Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T14:51:30.238Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T14:51:30.344Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T14:51:32.227Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T14:51:32.238Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T15:01:52.860Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T15:01:53.037Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T15:04:34.618Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T15:04:34.765Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T15:11:05.715Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T15:11:05.873Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/adminRoutes/listSignUpUsers","timestamp":"2025-05-20T15:12:54.958Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/adminRoutes/listSignUpUsers","timestamp":"2025-05-20T15:12:55.156Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/adminRoutes/listSignUpUsers","timestamp":"2025-05-20T15:12:56.602Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/adminRoutes/listSignUpUsers","timestamp":"2025-05-20T15:12:56.615Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/adminRoutes/listSignUpUsers","timestamp":"2025-05-20T15:13:27.490Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/adminRoutes/listSignUpUsers","timestamp":"2025-05-20T15:13:27.597Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T15:20:23.571Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T15:20:23.808Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/adminRoutes/listSignUpUsers","timestamp":"2025-05-20T15:20:24.946Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/adminRoutes/listSignUpUsers","timestamp":"2025-05-20T15:20:24.961Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T15:21:23.066Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T15:21:23.201Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/adminRoutes/listSignUpUsers","timestamp":"2025-05-20T15:23:10.279Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/adminRoutes/listSignUpUsers","timestamp":"2025-05-20T15:23:10.500Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T15:23:17.418Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T15:23:17.441Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/adminRoutes/listSignUpUsers","timestamp":"2025-05-20T15:25:28.911Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/adminRoutes/listSignUpUsers","timestamp":"2025-05-20T15:25:29.128Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/adminRoutes/listSignUpUsers","timestamp":"2025-05-20T15:26:16.705Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/adminRoutes/listSignUpUsers","timestamp":"2025-05-20T15:26:16.793Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T15:26:21.870Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T15:26:21.893Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/adminRoutes/listSignUpUsers","timestamp":"2025-05-20T15:26:22.774Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/adminRoutes/listSignUpUsers","timestamp":"2025-05-20T15:26:22.782Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/adminRoutes/listSignUpUsers","timestamp":"2025-05-20T15:28:20.349Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/adminRoutes/listSignUpUsers","timestamp":"2025-05-20T15:28:20.599Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/adminRoutes/listSignUpUsers","timestamp":"2025-05-20T15:33:49.651Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/adminRoutes/listSignUpUsers","timestamp":"2025-05-20T15:33:49.813Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/adminRoutes/listSignUpUsers","timestamp":"2025-05-20T15:34:13.382Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/adminRoutes/listSignUpUsers","timestamp":"2025-05-20T15:34:13.501Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/adminRoutes/listSignUpUsers","timestamp":"2025-05-20T15:35:43.674Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/adminRoutes/listSignUpUsers","timestamp":"2025-05-20T15:35:43.911Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/adminRoutes/listUserBookings","timestamp":"2025-05-20T15:35:49.043Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/adminRoutes/listUserBookings","timestamp":"2025-05-20T15:35:49.064Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/adminRoutes/listUserBookings","timestamp":"2025-05-20T15:36:43.784Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/adminRoutes/listUserBookings","timestamp":"2025-05-20T15:36:44.107Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T15:41:05.723Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/adminRoutes/listUserBookings","timestamp":"2025-05-20T15:41:19.546Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/adminRoutes/listUserBookings","timestamp":"2025-05-20T15:41:19.711Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T15:43:07.023Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T15:43:07.212Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T15:43:07.830Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/groundRoutes/listGround","timestamp":"2025-05-20T15:43:07.841Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-05-20T15:43:48.058Z"}
